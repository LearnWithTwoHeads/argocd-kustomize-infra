---
name: Deploy Project

on:
  workflow_dispatch:
    inputs:
      project:
        required: true
        type: string
        description: 'The project name to deploy (e.g., castle)'
      version:
        required: true
        type: string
        description: 'The version/tag to deploy'
      environment:
        required: true
        type: string
        description: 'The environment to deploy to (e.g., dev, prod)'

permissions:
  contents: write
  pull-requests: write

jobs:
  update-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update version in values files
        run: |
          cd cluster-software/${{ inputs.project }}/overlays/${{ inputs.environment }}
          
          # Update kustomization.yaml
          if [ -f kustomization.yaml ]; then
            sed -i 's/\(newTag: \).*/\1"${{ inputs.version }}"/' kustomization.yaml
            echo "Updated kustomization.yaml with version ${{ inputs.version }}"
          else
            echo "kustomization.yaml not found"
          fi

      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          
          # Only commit and push if there are changes
          if [ -n "$(git status --porcelain)" ]; then
            git add cluster-software/${{ inputs.project }}/overlays/${{ inputs.environment }}/kustomization.yaml
            git commit -m "Update ${{ inputs.project }} image tag to ${{ inputs.version }} in ${{ inputs.environment }}"
            
            # Retry push up to 3 times with pull/rebase
            for i in {1..3}; do
              echo "Push attempt $i/3"
              
              # Pull and rebase latest changes
              git pull --rebase origin dev
              
              # Try to push
              if git push origin dev; then
                echo "Successfully pushed changes"
                break
              else
                if [ $i -eq 3 ]; then
                  echo "Failed to push after 3 attempts"
                  exit 1
                fi
                echo "Push failed, retrying..."
                sleep 5
              fi
            done
          else
            echo "No changes to commit"
          fi
